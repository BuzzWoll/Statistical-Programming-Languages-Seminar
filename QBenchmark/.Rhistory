knitr::opts_chunk$set(echo = TRUE)
load("../Qdataprep/data.RData")
(train)
a = arima(train$`S&P500`, order = c(1,0,0), include.mean = F)
a
a$coef
a$model
b = ar(train$`S&P500`, aic = TRUE, order.max = NULL, na.action)
myts <- ts(train$`S&P500`, start=c(2012, 12), end=c(2014, 12), frequency=12)
myts
install.packages("forecast")
if(!require("forecast")) install.packages("forecast"); library("forecast")
fit <- arima(myts, order=c(p, d, q))
fit <- arima(myts, order=c(1, 0, 0))
accuracy(fit)
forecast(fit, 5)
plot(forecast(fit, 5))
BIC(fit1, fit2)
fit1 = arima(myts, order=c(1, 0, 0))
fit2 = forecast(fit, 5)
BIC(fit1, fit2)
load("../Qpca/Qpca.rmd")
fit1 = arima(myts, order=c(1, 0, 0))
accuracy(fit2)
fit1 = arima(train$`S&P500`, order=c(1, 0, 0))
fit2 = forecast(fit, 5)
if(!require("forecast")) install.packages("forecast"); library("forecast")
fit2 = forecast(fit, 5)
accuracy(fit2)
plot(forecast(fit, 5))
ar(train$`S&P500`, aic=TRUE, method="yule-walker")
fit4  = ar(train$`S&P500`, aic=TRUE, method="yule-walker")
fit4  = ar(train$`S&P500`, aic=TRUE, method="yule-walker")
summary(fit4)
plot(forecast(fit4, 5))
BIC(fit4)
a = arima(train$`S&P500`, order = c(1,0,0), include.mean = F)
a2 = forecast(a,5)
plot(forecast(a,5))
plot(forecast(fit4, 5))
BIC(a)
a = arima(train, order = c(1,0,0), include.mean = F)
BIC(a)
b = arima(train$`S&P500`, order = c(2,0,0), include.mean = F)
BIC(b)
BIC(a)
b = arima(train$`S&P500`, order = c(10,0,0), include.mean = F)
BIC(b)
b = arima(train$`S&P500`, order = c(0.5,0,0), include.mean = F)
BIC(b)
summary(train)
train
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
}
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
BIC(fit1)
}
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
print(BIC(fit1))
}
minBIC= min(print(BIC(fit1)))
minBIC= min(BIC(fit1))
print(minBIC)
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
minBIC= min(BIC(fit1))
print(minBIC)
}
minBIC[i]= min(BIC(fit1))
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
minBIC[[i]]= min(BIC(fit1))
}
print(minBIC)
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
minBIC[[i]]= BIC(fit1)
print(minBIC)
}
minBIC= BIC(fit1)
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
minBIC= BIC(fit1)
print(minBIC)
}
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
minBIC= BIC(fit1)
min =min(minBIC)
print(minBIC)
print(min)
}
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
minBIC= BIC(fit1)
min =min(minBIC)
#print(minBIC)
print(min)
}
for(i in  1:10){
fit1[i] = arima(train$`S&P500`, order=c(i, 0, 0))
print(fit1[i])
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit1 = arima(train$`S&P500`, order=c(i, 0, 0))
print(fit1)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit1(i) = arima(train$`S&P500`, order=c(i, 0, 0))
print(fit1(i))
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit+i = arima(train$`S&P500`, order=c(i, 0, 0))
print(fit+i)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
print(fit)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
BIC(fit)
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
print(fit)
BIC= BIC(fit)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
print(minBIC)
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC= BIC(fit)
print(minBIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC= BIC(fit)
print(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
str(BIC)
summary(BIC)
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
print(BIC[i])
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
#print(BIC[i])
if(BIC[i]== min){
print(BIC[i])
}
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
print(BIC[i])
print(BIC[i+1])
# if(BIC[i]<=BIC[i+1]){
#  print(BIC[i])
# }
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
print(BIC[i])
print(BIC[i+1])
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
# print(BIC[i])
print(BIC[i+1])
# if(BIC[i]<=BIC[i+1]){
#  print(BIC[i])
# }
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
print(BIC[i])
#  print(BIC[i+1])
# if(BIC[i]<=BIC[i+1]){
#  print(BIC[i])
# }
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
# print(BIC[i])
#  print(BIC[i+1])
if(BIC[i]<BIC[i+1]){
min=BIC[i]
print(min)
}else{
min=BIC[i+1]
print(min)
}
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
knitr::opts_chunk$set(echo = TRUE)
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
# print(BIC[i])
#  print(BIC[i+1])
if(BIC[i]<BIC[i+1]){
min=BIC[i]
print(min)
}else{
min=BIC[i+1]
print(min)
}
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
# print(BIC[i])
#  print(BIC[i+1])
if(BIC[i]<BIC[i+1]){
min=BIC[i]
print(min)
}else{
min=BIC[i+1]
print(min)
}
# summary(BIC)
# BIC= BIC(fit1)
# min =min(minBIC)
#print(minBIC)
#print(min)
}
min(BIC)
BIC[min(BIC)]
BIC == min(BIC)
which(BIC == min(BIC))
arima(train$`S&P500`, order=c(2, 0, 0))
arima(train$`S&P500`, order=c(1, 0, 0))
arima(train$`S&P500`, order=c(10, 0, 0))
arima(train$`S&P500`, order=c(1, 0, 0))
fit2 = forecast(fit, 5)
if(!require("forecast")) install.packages("forecast"); library("forecast")
load("../Qdataprep/data.RData")
train
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
#    if(BIC[i]<BIC[i+1]){
#     min=BIC[i]
#    print(min)
# }else{
#  min=BIC[i+1]
# print(min)
}
which(BIC == min(BIC))
plot(fit)
fit2 = forecast(fit, 5)
if(!require("forecast")) install.packages("forecast"); library("forecast")
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
# print(fit)
BIC[i]= BIC(fit)
#    if(BIC[i]<BIC[i+1]){
#     min=BIC[i]
#    print(min)
# }else{
#  min=BIC[i+1]
# print(min)
}
fit2 = forecast(fit, 5)
accuracy(fit2)
plot(forecast(fit4, 5))
fit2 = forecast(fit, 276)
plot(forecast(fit4, 5))
fit2 = forecast(fit, 276-300)
fit2 = forecast(fit, 276)
accuracy(fit2)
plot(forecast(fit4, 5))
plot(forecast(fit4, 276))
plot(forecast(fit, 276))
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
BIC[i]= BIC(fit)
}
print(BIC)
for(i in  1:10){
fit = arima(train$`S&P500`, order=c(i, 0, 0))
BIC[i]= BIC(fit)
print(BIC)
}
which(BIC == min(BIC))
which(BIC == min(BIC))
fit2 =
min(BIC)
min(BIC)
which(BIC == min(BIC))
train
View(train)
View(train)
forecast = forecast(arima(train$`S&P500`, order=c(min(BIC), 0, 0)), 276)
fitMinBIC = arima(train$`S&P500`, order=c(min(BIC), 0, 0))
min=min(BIC)
fitMinBIC = arima(train$`S&P500`, order=c(min, 0, 0))
min
min=which(BIC == min(BIC))
fitMinBIC = arima(train$`S&P500`, order=c(min, 0, 0))
forecast = forecast(fitMinBIC, 276)
accuracy(fitMinBIC)
plot(forecast(fitMinBIC, 276))
forecast = forecast(fitMinBIC, h=24)
accuracy(fitMinBIC)
plot(forecast(fitMinBIC, 276))
fit = arima(ts(train$`S&P500`[c(1:275)], order=c(i, 0, 0)))
myts <- ts(myvector, start=c(1992, 2), end=c(2014, 12), frequency=12)
myts <- ts(train$`S&P500`, start=c(1992, 2), end=c(2014, 12), frequency=12)
plot(myts)
plot(myts)
boxplot(myts)
fit = arima(myts, order=c(i, 0, 0)))
fit = arima(myts, order=c(i, 0, 0))
for(i in  1:10){
#fit = arima(train$`S&P500`, order=c(i, 0, 0))
fit = arima(myts, order=c(i, 0, 0))
BIC[i]= BIC(fit)
}
min=which(BIC == min(BIC))
min(BIC)
fitMinBIC = arima(myts`, order=c(min, 0, 0))
fitMinBIC = arima(myts, order=c(min, 0, 0))
myts <- ts(train$`S&P500`, start=c(1992, 2), end=c(2017, 1), frequency=12)
load("../Qdataprep/data.RData")
train
if(!require("forecast")) install.packages("forecast"); library("forecast")
myts <- ts(train$`S&P500`, start=c(1992, 2), end=c(2017, 1), frequency=12)
# Vergleich a lag 1 - 10 und dann min BIC rausbekommen
for(i in  1:10){
#fit = arima(train$`S&P500`, order=c(i, 0, 0))
fit = arima(myts, order=c(i, 0, 0))
BIC[i]= BIC(fit)
}
min=which(BIC == min(BIC))
min(BIC)
fitMinBIC = arima(myts, order=c(min, 0, 0))
#fit_no_holdout = arima(ts(deseasonal_cnt[-c(700:725)]), order=c(1,1,7))
forecast = forecast(fitMinBIC, h=24)
accuracy(fitMinBIC)
plot(forecast(fitMinBIC, 276))
#a$coef
#a$model
if(!require("forecast")) install.packages("forecast"); library("forecast")
if(!require("tseries")) install.packages("tseries"); library("tseries")
if(!require("ggplot2")) install.packages("ggplot2"); library("ggplot2")
summary(train)
str(train)
ggplot(train$date, aes(date, cnt)) + geom_line() + scale_x_date('month')  + ylab("Daily Bike Checkouts") +
xlab("")
train$date = as.Date(train$date)
ggplot(train$date, aes(date, cnt)) + geom_line() + scale_x_date('month')  + ylab("Daily Bike Checkouts") +
xlab("")
auto.arima(train$`S&P500`, seasonal=FALSE)
fitMinBIC = arima(myts, order=c(min1, 0, 0))
min1=0
fitMinBIC = arima(myts, order=c(min1, 0, 0))
BIC(fitMinBIC)
auto.arima(train$`S&P500`, seasonal=FALSE)
fit = auto.arima(train$`S&P500`, seasonal=FALSE)
tsdisplay(residuals(fit), lag.max=10, main='(0,0,0) Model Residuals')
fit2 = arima(train$`S&P500`, order=c(0,0,8))
tsdisplay(residuals(fit), lag.max=10, main='(0,0,8) Model Residuals')
fit2
fcast <- forecast(fit2, h=24)
plot(fcast)
hold <- window(ts(train$`S&P500`), start=275)
fit_no_holdout = arima(ts(train$`S&P500`[-c(276:300)]), order=c(0,0,8))
fcast_no_holdout <- forecast(fit_no_holdout,h=24)
plot(fcast_no_holdout, main=" ")
lines(ts(train$`S&P500`))
plot(fcast_no_holdout, main=" ")
lines(ts(train$`S&P500`))
fit_w_seasonality = auto.arima(train$`S&P500, seasonal=TRUE)
fit_w_seasonality
fit_w_seasonality = auto.arima(train$`S&P500', seasonal=TRUE)
fit_w_seasonality = auto.arima(train$`S&P500`, seasonal=TRUE)
fit_w_seasonality
fcast <- forecast(fit2, h=24)
plot(fcast)
