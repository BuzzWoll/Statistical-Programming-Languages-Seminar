knitr::opts_chunk$set(echo = TRUE)
MAPE  = MAPE(y_hat, y)
MAPE  = MAPE(y_hat, y)
MAPE  = mape(y_hat, y)
MAPE  = function(y,y_hat){sum(100(y - y_hat) / y )/length(y_hat)}
MAPE
MAPE_tab
MAPE_tab = c(DI = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE  = function(y,y_hat){sum(100(y - y_hat) / y )/length(y_hat)}
MAPE_tab = c(DI = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE  = function(y,y_hat){sum(100*(y - y_hat)/ y )/length(y_hat)}
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
library(forecast)
load("../Qforecasting/forecasts.RData")
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE_tab
pi = 100*(y-y_hat)/y
pi = function(y,y_hat){} 100*(y-y_hat)/y}
pi = function(y,y_hat){ 100*(y-y_hat)/y}
pi = function(y,y_hat){ 100*(y-y_hat)/y}
MAPE  = function(y,y_hat){sum(pi)/length(y_hat)}
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE  = function(y,y_hat){sum(100*(y-y_hat)/y)/length(y_hat)}
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE_tab
sMAPE = function(y,y_hat){sum(200*(y-y_hat)/(y+y_hat))/length(y_hat)}
sMAPE_tab = c(DI     = sMAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = sMAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = sMAPE(forecasts$y, forecasts$y_hat_AR))
sMAPE_tab
MAE = function(y,y_hat){sum(y-y_hat)/length(y_hat)}
MAE_tab =  c(DI     = MAE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAE(forecasts$y, forecasts$y_hat_AR))
MAE_tab
library(forecast)
load("../Qforecasting/forecasts.RData")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y,y_hat){sum(sqrt((y - y_hat)^2)) /length(y_hat)}
RMSE_tab = c(DI     = RMSE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = RMSE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = RMSE(forecasts$y, forecasts$y_hat_AR))
RMSE_tab
forecasts$e_DI    = forecasts$y_hat_DI    - forecasts$y
RMSE     = function(y,y_hat){sum(sqrt((y - y_hat)^2)) /length(y_hat)}
RMSE_tab = c(DI     = RMSE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = RMSE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = RMSE(forecasts$y, forecasts$y_hat_AR))
RMSE_tab
library(forecast)
load("../Qforecasting/forecasts.RData")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y,y_hat){sum(sqrt((y - y_hat)^2)) /length(y_hat)}
RMSE_tab = c(DI     = RMSE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = RMSE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = RMSE(forecasts$y, forecasts$y_hat_AR))
RMSE_tab
forecasts$e_DI    = forecasts$y_hat_DI    - forecasts$y
forecasts$e_DI    = forecasts$y_hat_DI    - forecasts$y
