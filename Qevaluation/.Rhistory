knitr::opts_chunk$set(echo = TRUE)
MAPE  = MAPE(y_hat, y)
MAPE  = MAPE(y_hat, y)
MAPE  = mape(y_hat, y)
MAPE  = function(y,y_hat){sum(100(y - y_hat) / y )/length(y_hat)}
MAPE
MAPE_tab
MAPE_tab = c(DI = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE  = function(y,y_hat){sum(100(y - y_hat) / y )/length(y_hat)}
MAPE_tab = c(DI = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE  = function(y,y_hat){sum(100*(y - y_hat)/ y )/length(y_hat)}
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
library(forecast)
load("../Qforecasting/forecasts.RData")
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE_tab
pi = 100*(y-y_hat)/y
pi = function(y,y_hat){} 100*(y-y_hat)/y}
pi = function(y,y_hat){ 100*(y-y_hat)/y}
pi = function(y,y_hat){ 100*(y-y_hat)/y}
MAPE  = function(y,y_hat){sum(pi)/length(y_hat)}
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE  = function(y,y_hat){sum(100*(y-y_hat)/y)/length(y_hat)}
MAPE_tab = c(DI     = MAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAPE(forecasts$y, forecasts$y_hat_AR))
MAPE_tab
sMAPE = function(y,y_hat){sum(200*(y-y_hat)/(y+y_hat))/length(y_hat)}
sMAPE_tab = c(DI     = sMAPE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = sMAPE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = sMAPE(forecasts$y, forecasts$y_hat_AR))
sMAPE_tab
MAE = function(y,y_hat){sum(y-y_hat)/length(y_hat)}
MAE_tab =  c(DI     = MAE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = MAE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = MAE(forecasts$y, forecasts$y_hat_AR))
MAE_tab
library(forecast)
load("../Qforecasting/forecasts.RData")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y,y_hat){sum(sqrt((y - y_hat)^2)) /length(y_hat)}
RMSE_tab = c(DI     = RMSE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = RMSE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = RMSE(forecasts$y, forecasts$y_hat_AR))
RMSE_tab
forecasts$e_DI    = forecasts$y_hat_DI    - forecasts$y
RMSE     = function(y,y_hat){sum(sqrt((y - y_hat)^2)) /length(y_hat)}
RMSE_tab = c(DI     = RMSE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = RMSE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = RMSE(forecasts$y, forecasts$y_hat_AR))
RMSE_tab
library(forecast)
load("../Qforecasting/forecasts.RData")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y,y_hat){sum(sqrt((y - y_hat)^2)) /length(y_hat)}
RMSE_tab = c(DI     = RMSE(forecasts$y, forecasts$y_hat_DI),
DI_AR  = RMSE(forecasts$y, forecasts$y_hat_DI_AR),
AR     = RMSE(forecasts$y, forecasts$y_hat_AR))
RMSE_tab
forecasts$e_DI    = forecasts$y_hat_DI    - forecasts$y
forecasts$e_DI    = forecasts$y_hat_DI    - forecasts$y
knitr::opts_chunk$set(echo = TRUE)
MAE = function(y,y_hat){sum(y-y_hat)/length(y_hat)}
MAE_tab =  c(DI_h1     = MAE(forecasts$y, forecasts$DI_h1),
DI_h3     = MAE(forecasts$y, forecasts$DI_h3),
DI_h6     = MAE(forecasts$y, forecasts$DI_h6),
DI_h12     = MAE(forecasts$y, forecasts$DI_h12),
DI_AR_h1  = MAE(forecasts$y, forecasts$DI_AR_h1),
DI_AR_h3  = MAE(forecasts$y, forecasts$DI_AR_h3),
DI_AR_h6  = MAE(forecasts$y, forecasts$DI_AR_h6),
DI_AR_h12  = MAE(forecasts$y, forecasts$DI_AR_h12),
AR_h1     = MAE(forecasts$y, forecasts$AR_h1),
AR_h3     = MAE(forecasts$y, forecasts$AR_h3),
AR_h6     = MAE(forecasts$y, forecasts$AR_h6),
AR_h12     = MAE(forecasts$y, forecasts$AR_h12)
)
MAE_tab
apply(MAE_tab,2)
apply(MAE_tab,2,FUN)
m = matrix(c(forecasts$y, forecasts$DI_h3))
apply(m,1,MAE)
m
m = matrix(c(forecasts$DI_h3))
m
forecasts$y
m = c(forecasts$y, forecasts$DI_h3)
apply(m,1,MAE)
MAE = function(y,y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
m = c(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12)
apply(m,1,MAE)
m = matrix(c(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12))
apply(m,1,MAE)
apply(m,1,MAE)
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
m = matrix(c(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12))
apply(m,1,MAE)
MAE_tab =  c(
DI_h1     = MAE(forecasts$y, forecasts$DI_h1),
DI_h3     = MAE(forecasts$y, forecasts$DI_h3),
DI_h6     = MAE(forecasts$y, forecasts$DI_h6),
DI_h12     = MAE(forecasts$y, forecasts$DI_h12),
DI_AR_h1  = MAE(forecasts$y, forecasts$DI_AR_h1),
DI_AR_h3  = MAE(forecasts$y, forecasts$DI_AR_h3),
DI_AR_h6  = MAE(forecasts$y, forecasts$DI_AR_h6),
DI_AR_h12  = MAE(forecasts$y, forecasts$DI_AR_h12),
AR_h1     = MAE(forecasts$y, forecasts$AR_h1),
AR_h3     = MAE(forecasts$y, forecasts$AR_h3),
AR_h6     = MAE(forecasts$y, forecasts$AR_h6),
AR_h12    = MAE(forecasts$y, forecasts$AR_h12) )
MAE = function(y,y_hat){sum(y-y_hat)/length(y_hat)}
MAE_tab =  c(
DI_h1     = MAE(forecasts$y, forecasts$DI_h1),
DI_h3     = MAE(forecasts$y, forecasts$DI_h3),
DI_h6     = MAE(forecasts$y, forecasts$DI_h6),
DI_h12     = MAE(forecasts$y, forecasts$DI_h12),
DI_AR_h1  = MAE(forecasts$y, forecasts$DI_AR_h1),
DI_AR_h3  = MAE(forecasts$y, forecasts$DI_AR_h3),
DI_AR_h6  = MAE(forecasts$y, forecasts$DI_AR_h6),
DI_AR_h12  = MAE(forecasts$y, forecasts$DI_AR_h12),
AR_h1     = MAE(forecasts$y, forecasts$AR_h1),
AR_h3     = MAE(forecasts$y, forecasts$AR_h3),
AR_h6     = MAE(forecasts$y, forecasts$AR_h6),
AR_h12    = MAE(forecasts$y, forecasts$AR_h12) )
MAE_tab
apply(m,2,MAEapply)
MAEapply = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m,2,MAEapply)
apply(m,1,2,MAEapply)
apply(m,c(1,2)MAEapply)
apply(m,c(1,2),MAEapply)
m
m = matrix(c(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12)ncol = 3)
m = matrix(c(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12),ncol = 3)
m
m = matrix(c(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12),ncol = 4)
m
cbind(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12)
cbind(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12)
v1= c(1,2,3)
v2= c(3,4,5)
v4= c(9,0,6)
cbind(v1,v2,v3,v4)
v3= c(6,7,8)
cbind(v1,v2,v3,v4)
m= cbind(forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12)
apply(m,c(1,2),MAEapply)
apply(m,c(1),MAEapply)
apply(m,c(2),MAEapply)
MAE_tab =  c(
DI_h1     = MAE(forecasts$y, forecasts$DI_h1),
DI_h3     = MAE(forecasts$y, forecasts$DI_h3),
DI_h6     = MAE(forecasts$y, forecasts$DI_h6),
DI_h12     = MAE(forecasts$y, forecasts$DI_h12),
DI_AR_h1  = MAE(forecasts$y, forecasts$DI_AR_h1),
DI_AR_h3  = MAE(forecasts$y, forecasts$DI_AR_h3),
DI_AR_h6  = MAE(forecasts$y, forecasts$DI_AR_h6),
DI_AR_h12  = MAE(forecasts$y, forecasts$DI_AR_h12),
AR_h1     = MAE(forecasts$y, forecasts$AR_h1),
AR_h3     = MAE(forecasts$y, forecasts$AR_h3),
AR_h6     = MAE(forecasts$y, forecasts$AR_h6),
AR_h12    = MAE(forecasts$y, forecasts$AR_h12) )
MAE_tab
m= cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h9,forecasts$DI_h12)
m
apply(m,c(2),MAEapply)
MAE_tab
colnames(m)=c("DI_h3","DI_h6","DI_h12")
colnames(m)=c("DI_h1","DI_h3","DI_h6","DI_h12")
apply(m,2,MAEapply)
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
apply(m_DI,2,MAEapply)
apply(m_DI_AR,2,MAEapply)
apply(m_AR,2,MAEapply)
MAE_tab
apply(m_DI,2,MAE)
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
MAPE  = function(y_hat){sum(100*(y-y_hat)/y)/length(y_hat)}
apply(m_DI,2,MAPE)
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
apply(m_DI,2,MAE)
MAPE  = function(y_hat){sum(100*(y-y_hat)/y)/length(y_hat)}
apply(m_DI_AR,2,MAPE)
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
library(forecast)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12    = forecasts$AR_h12    - forecasts$y
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
library(forecast)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12    = forecasts$AR_h12    - forecasts$y
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 1, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 1, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 1, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
