apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
library(forecast)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12    = forecasts$AR_h12    - forecasts$y
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 1, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 1, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 1, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
library(forecast)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12   = forecasts$AR_h12   - forecasts$y
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
library(forecast)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
print("RMSE")
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12   = forecasts$AR_h12   - forecasts$y
print("Dm-test")
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
print("MAE")
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
print("MAPE")
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
print("sMAPE")
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
print("RMSE")
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
auRMSE_DI = apply(m_DI,2,rmse())
install.packages(metrics)
install.packages("metrics")
install.packages("Metrics")
library(Metrics)
library("Metrics"")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
library("Metrics")
auRMSE_DI = apply(m_DI,2,rmse())
apply(m_DI,2,RMSE)
rmse(forecasts$DI_h1,y_hat)
library(forecast)
rmse(forecasts$DI_h1,y_hat)
rmse(forecasts$DI_h1,forecasts$y_hat)
y_hat
library(forecast)
load("../Qforecasting/forecasts.RData")
install.packages("Metrics")
library("Metrics")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
print("RMSE")
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
#rmse(forecasts$DI_h1,)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12   = forecasts$AR_h12   - forecasts$y
print("Dm-test")
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
print("MAE")
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#MAPE
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
print("MAPE")
apply(m_DI,2,MAPE)
apply(m_DI_AR,2,MAPE)
apply(m_AR,2,MAPE)
#sMAPE
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
print("sMAPE")
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
install.packages("Metrics")
RMSE     = function(y_hat){sum(sqrt((forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
rmse(forecasts$y,forecasts$DI_h1)
rmse(forecasts$y,forecasts$DI_h3)
rmse(forecasts$y,forecasts$DI_h6)
RMSE     = {sum(sqrt((forecasts$y - forecasts$DI_h1)^2)) /length(forecasts$DI_h1)}
RMSE
RMSE     = (sqrt((forecasts$y - forecasts$DI_h1)^2))
RMSE
RMSE     = {sum((forecasts$y - forecasts$DI_h1)^2) /length(forecasts$DI_h1)^0,5}
RMSE     = {sum((forecasts$y - forecasts$DI_h1)^2) /length(forecasts$DI_h1)^0.5}
RMSE
RMSE     = {(sum((forecasts$y - forecasts$DI_h1)^2) /length(forecasts$DI_h1))^0.5}
RMSE
rmse(forecasts$y,forecasts$DI_h1)
RMSE     = function(y_hat){(sum((forecasts$y - y_hat)^2) /length(y_hat))^0.5}
apply(m_DI,2,RMSE)
rmse(forecasts$y,forecasts$DI_h1)
rmse(forecasts$y,forecasts$DI_h3)
rmse(forecasts$y,forecasts$DI_h6)
RMSE     = function(y_hat){sqrt(sum((forecasts$y - y_hat)^2) /length(y_hat))}
apply(m_DI,2,RMSE)
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m_DI,2,MAE)
mae(forecasts$y,forecasts$DI_h1)
MAE = function(y_hat){(forecasts$y-y_hat)}
apply(m_DI,2,MAE)
mae(forecasts$y,forecasts$DI_h1)
MAE = function(y_hat){sum(forecasts$y-y_hat)/length(y_hat)}
apply(m_DI,2,MAE)
MAE = function(y_hat){(forecasts$y-y_hat)}
apply(m_DI,2,MAE)
(1/length(forecasts$DI_h1))*(sum(forecasts$forecasts$DI_h1)/length(forecasts$DI_h1))
MAE = function(y_hat){sum(|forecasts$y-y_hat|)/length(y_hat)}
(1/length(forecasts$DI_h1))*(sum(forecasts$y-forecasts$DI_h1)/length(forecasts$DI_h1))
(sum(forecasts$y-forecasts$DI_h1)/length(forecasts$DI_h1))
abs(sum(forecasts$y-forecasts$DI_h1)/length(forecasts$DI_h1))
mae(forecasts$y,forecasts$DI_h1)
abs((sum(forecasts$y-forecasts$DI_h1))/length(forecasts$DI_h1))
sum(abs(forecasts$y-forecasts$DI_h1))/length(forecasts$DI_h1)
mae(forecasts$y,forecasts$DI_h1)
MAE = function(y_hat){sum(abs(forecasts$y-y_hat))/length(y_hat)}
apply(m_DI,2,MAE)
smape(forecasts$y,forecasts$DI_h1)
sMAPE = function(y_hat){sum(200*(forecasts$y-y_hat)/(forecasts$y+y_hat))/length(y_hat)}
apply(m_DI,2,sMAPE)
(2/length(forecasts$DI_h1))*sum(abs(forecasts$y-forecasts$DI_h1)/(forecasts$y+forecasts$DI_h1))/length(forecasts$DI_h1)
(100/length(forecasts$DI_h1))*sum(abs(forecasts$y-forecasts$DI_h1)/(forecasts$y+forecasts$DI_h1))/length(forecasts$DI_h1)
smape(forecasts$y,forecasts$DI_h1)
(100%/length(forecasts$DI_h1))*sum(abs(forecasts$y-forecasts$DI_h1)/(forecasts$y+forecasts$DI_h1))/length(forecasts$DI_h1)
(100/length(forecasts$DI_h1))*sum(abs(forecasts$y-forecasts$DI_h1)/(abs(forecasts$y)+abs(forecasts$DI_h1)))/length(forecasts$DI_h1)
mape(forecasts$y,forecasts$DI_h1)
MAPE  = function(y_hat){sum(100*(forecasts$y-y_hat)/forecasts$y)/length(y_hat)}
apply(m_DI,2,MAPE)
smape(forecasts$y,forecasts$DI_h1)
smape(forecasts$y,forecasts$DI_h1)
mape(forecasts$y,forecasts$DI_h1)
smape(forecasts$y,forecasts$DI_h1)
smape(forecasts$DI_h1,forecasts$y)
smape(forecasts$DI_h1,forecasts$y)
RMSE     = function(y_hat){(sqrt(sum(forecasts$y - y_hat)^2)) /length(y_hat)}
apply(m_DI,2,RMSE)
library(Metrics)
rmse(forecasts$y,forecasts$DI_h1)
RMSE     = function(y_hat){sqrt(sum(forecasts$y - y_hat)^2) /length(y_hat)}
apply(m_DI,2,RMSE)
rmse(forecasts$y,forecasts$DI_h1)
RMSE     = function(y_hat){sqrt(sum(forecasts$y - y_hat)^2/length(y_hat))}
apply(m_DI,2,RMSE)
RMSE     = function(y_hat){sqrt(sum((forecasts$y - y_hat)^2)/length(y_hat))}
apply(m_DI,2,RMSE)
rmse(forecasts$y,forecasts$DI_h1)
mae(forecasts$y,forecasts$DI_h1)
MAE = function(y_hat){sum(abs(forecasts$y-y_hat))/length(y_hat)}
apply(m_DI,2,MAE)
mape(forecasts$y,forecasts$DI_h1)
smape(forecasts$y,forecasts$DI_h1)
sMAPE  = function(y_hat){100/length(y_hat)*sum((y_hat-forecasts$y)((y_hat+forecasts$y)/2))/length(y_hat)}
apply(m_DI,2,sMAPE)
sMAPE  = function(y_hat){100/length(y_hat)*sum((y_hat-forecasts$y)((y_hat+forecasts$y)/2))/length(y_hat)}
apply(m_DI,2,sMAPE)
sMAPE  = function(y_hat){(100/length(y_hat))*sum((y_hat-forecasts$y)((y_hat+forecasts$y)/2))/length(y_hat)}
apply(m_DI,2,sMAPE)
sMAPE  = function(y_hat){sum((y_hat-forecasts$y)((y_hat+forecasts$y)/2))/length(y_hat)}
apply(m_DI,2,sMAPE)
sMAPE  = function(y_hat){sum(abs(y_hat-forecasts$y)/((y_hat+forecasts$y)/2))/length(y_hat)}
apply(m_DI,2,sMAPE)
smape(forecasts$y,forecasts$DI_h1)
sMAPE  = function(y_hat){sum(abs(y_hat-forecasts$y)/((abs(y_hat)+abs(forecasts$y))/2))/length(y_hat)}
apply(m_DI,2,sMAPE)
smape(forecasts$y,forecasts$DI_h3)
forecasts$dm_eDI=cbind((forecasts$DI_h1 - forecasts$y),(forecasts$DI_h3 - forecasts$y),(forecasts$DI_h6 - forecasts$y),(forecasts$DI_h12 - forecasts$y))
forecasts$dm_eDI
colnames(forecasts$dm_eDI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
forecasts$dm_eDI
colnames(forecasts$dm_eDI)   =c("Error DI_h1","Error DI_h3","Error DI_h6","Error DI_h12")
forecasts$dm_eDI
dm_test=function(x,y){dm.test(x,y,h=1,power=1)}
forecasts$dm_eDI=cbind((forecasts$DI_h1 - forecasts$y),(forecasts$DI_h3 - forecasts$y),(forecasts$DI_h6 - forecasts$y),(forecasts$DI_h12 - forecasts$y))
forecasts$dm_eDI_AR=cbind((forecasts$DI_AR_h1 - forecasts$y),(forecasts$DI_AR_h3 - forecasts$y),( forecasts$DI_AR_h6 - forecasts$y),(forecasts$DI_AR_h12 - forecasts$y))
forecasts$dm_eAR=cbind((forecasts$AR_h1 - forecasts$y),(forecasts$AR_h3 - forecasts$y),(forecasts$AR_h6 - forecasts$y),(forecasts$AR_h12 - forecasts$y))
dm_test=function(x,y){dm.test(x,y,h=1,power=1)}
sapply(forecasts$dm_eDI,dm_test,var2=forecasts$dm_eDI_AR)
sapply(forecasts$dm_eDI,dm_test,x=forecasts$dm_eDI_AR)
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
apply(forecasts$dm_eDI,dm_test,x=forecasts$dm_eDI_AR,2)
sapply(forecasts$dm_eDI,dm_test,x=forecasts$dm_eDI_AR)
sapply(forecasts$dm_eDI,2,dm_test,x=forecasts$dm_eDI_AR)
dm_test=function(x,y){dm.test(x,y,h=1,power=1)}
mapply(dm_test,forecasts$dm_eDI,MoreArgs =forecasts$dm_eDI_AR)
dm_test=function(x,y){dm.test(x,y,h=1,power=1)}
mapply(dm_test,forecasts$e_DI_h1,MoreArgs =forecasts$e_DI_AR_h1)
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h1
forecasts$dm_eDI=cbind((forecasts$DI_h1 - forecasts$y),(forecasts$DI_h3 - forecasts$y),(forecasts$DI_h6 - forecasts$y),(forecasts$DI_h12 - forecasts$y))
forecasts$dm_eDI
dm.test(forecasts$dm_eDI,forecasts$dm_eDI_AR,h=1,power=1)
library(forecast)
library(Metrics)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sqrt(sum((forecasts$y - y_hat)^2)/length(y_hat))}
print("RMSE")
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
#forecasts$dm_eDI=cbind((forecasts$DI_h1 - forecasts$y),(forecasts$DI_h3 - forecasts$y),(forecasts$DI_h6 - forecasts$y),(forecasts$DI_h12 - forecasts$y))
#colnames(forecasts$dm_eDI)   =c("Error DI_h1","Error DI_h3","Error DI_h6","Error DI_h12")
#forecasts$dm_eDI_AR=cbind((forecasts$DI_AR_h1 - forecasts$y),(forecasts$DI_AR_h3 - forecasts$y),( forecasts$DI_AR_h6 - forecasts$y),(forecasts$DI_AR_h12 - forecasts$y))
#colnames(forecasts$dm_eDI_AR)=c("Error DI_AR_h1","Error DI_AR_h3","Error DI_AR_h6","Error DI_AR_h12")
#forecasts$dm_eAR=cbind((forecasts$AR_h1 - forecasts$y),(forecasts$AR_h3 - forecasts$y),(forecasts$AR_h6 - forecasts$y),(forecasts$AR_h12 - forecasts$y))
#colnames(forecasts$dm_eAR)   =c("Error AR_h1","Error AR_h3","Error AR_h6","Error AR_h12")
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_h1
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12   = forecasts$AR_h12   - forecasts$y
print("Dm-test")
#dm_test=function(x,y){dm.test(x,y,h=1,power=1)}
#mapply(dm_test,forecasts$e_DI_h1,MoreArgs =forecasts$e_DI_AR_h1)
#dm.test(forecasts$dm_eDI,forecasts$dm_eDI_AR,h=1,power=1)
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(abs(forecasts$y-y_hat))/length(y_hat)}
print("MAE")
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#sMAPE
sMAPE  = function(y_hat){sum(abs(y_hat-forecasts$y)/((abs(y_hat)+abs(forecasts$y))/2))/length(y_hat)}
print("sMAPE")
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
knitr::opts_chunk$set(echo = TRUE)
library(forecast)
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
print("RMSE")
apply(m_DI,2,RMSE)
fit = lm(forecasts$y~forecasts$DI_h1, data=mydata)
library(forecast)
library(Metrics)
load("../Qforecasting/forecasts.RData")
m_DI    = cbind(forecasts$DI_h1,forecasts$DI_h3,forecasts$DI_h6,forecasts$DI_h12)
m_DI_AR = cbind(forecasts$DI_AR_h1,forecasts$DI_AR_h3,forecasts$DI_AR_h6,forecasts$DI_AR_h12)
m_AR    = cbind(forecasts$AR_h1,forecasts$AR_h3,forecasts$AR_h6,forecasts$AR_h12)
colnames(m_DI)   =c("DI_h1","DI_h3","DI_h6","DI_h12")
colnames(m_DI_AR)=c(" DI_AR_h1"," DI_AR_h3"," DI_AR_h6","DI_AR_h12")
colnames(m_AR)   =c("AR_h1","AR_h3","AR_h6","AR_h12")
# Calculates the Root Mean Square Error for each of the models
RMSE     = function(y_hat){sqrt(sum((forecasts$y - y_hat)^2)/length(y_hat))}
print("RMSE")
apply(m_DI,2,RMSE)
apply(m_DI_AR,2,RMSE)
apply(m_AR,2,RMSE)
#forecasts$dm_eDI=cbind((forecasts$DI_h1 - forecasts$y),(forecasts$DI_h3 - forecasts$y),(forecasts$DI_h6 - forecasts$y),(forecasts$DI_h12 - forecasts$y))
#colnames(forecasts$dm_eDI)   =c("Error DI_h1","Error DI_h3","Error DI_h6","Error DI_h12")
#forecasts$dm_eDI_AR=cbind((forecasts$DI_AR_h1 - forecasts$y),(forecasts$DI_AR_h3 - forecasts$y),( forecasts$DI_AR_h6 - forecasts$y),(forecasts$DI_AR_h12 - forecasts$y))
#colnames(forecasts$dm_eDI_AR)=c("Error DI_AR_h1","Error DI_AR_h3","Error DI_AR_h6","Error DI_AR_h12")
#forecasts$dm_eAR=cbind((forecasts$AR_h1 - forecasts$y),(forecasts$AR_h3 - forecasts$y),(forecasts$AR_h6 - forecasts$y),(forecasts$AR_h12 - forecasts$y))
#colnames(forecasts$dm_eAR)   =c("Error AR_h1","Error AR_h3","Error AR_h6","Error AR_h12")
forecasts$e_DI_h1 = forecasts$DI_h1    - forecasts$y
forecasts$e_DI_h3 = forecasts$DI_h3    - forecasts$y
forecasts$e_DI_h6 = forecasts$DI_h6    - forecasts$y
forecasts$e_DI_h12 = forecasts$DI_h12    - forecasts$y
forecasts$e_DI_h1
forecasts$e_DI_AR_h1 = forecasts$DI_AR_h1 - forecasts$y
forecasts$e_DI_AR_h3 = forecasts$DI_AR_h3 - forecasts$y
forecasts$e_DI_AR_h6 = forecasts$DI_AR_h6 - forecasts$y
forecasts$e_DI_AR_h12 = forecasts$DI_AR_h12 - forecasts$y
forecasts$e_AR_h1    = forecasts$AR_h1    - forecasts$y
forecasts$e_AR_h3    = forecasts$AR_h3    - forecasts$y
forecasts$e_AR_h6    = forecasts$AR_h6    - forecasts$y
forecasts$e_AR_h12   = forecasts$AR_h12   - forecasts$y
print("Dm-test")
#dm_test=function(x,y){dm.test(x,y,h=1,power=1)}
#mapply(dm_test,forecasts$e_DI_h1,MoreArgs =forecasts$e_DI_AR_h1)
#dm.test(forecasts$dm_eDI,forecasts$dm_eDI_AR,h=1,power=1)
dm.test(forecasts$e_DI_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(forecasts$e_DI_AR_h1, forecasts$e_AR_h1, h = 1, power = 1)
dm.test(forecasts$e_DI_AR_h3, forecasts$e_AR_h3, h = 3, power = 1)
dm.test(forecasts$e_DI_AR_h6, forecasts$e_AR_h6, h = 6, power = 1)
dm.test(forecasts$e_DI_AR_h12, forecasts$e_AR_h12, h = 12, power = 1)
dm.test(c(1,1,1),c(1.000001, 0.999999,1), h = 1 , power = 1)
# DM Test can't reject H_0: no statistical significant difference in the two forecasts
#MAE
MAE = function(y_hat){sum(abs(forecasts$y-y_hat))/length(y_hat)}
print("MAE")
apply(m_DI,2,MAE)
apply(m_DI_AR,2,MAE)
apply(m_AR,2,MAE)
#sMAPE
sMAPE  = function(y_hat){sum(abs(y_hat-forecasts$y)/((abs(y_hat)+abs(forecasts$y))/2))/length(y_hat)}
print("sMAPE")
apply(m_DI,2,sMAPE)
apply(m_DI_AR,2,sMAPE)
apply(m_AR,2,sMAPE)
dm.test(residuals(forecasts$DI_h1),residuals(forecasts$DI_AR_h1),h=1, power=1)
accuracy(forecasts$y,forecasts$DI_h1)
d=1/length(forecasts$y)*sum(DI_AR)
DI_AR=forecasts$e_DI_h1^2-forecasts$e_DI_AR_h1^2
dt_DI_AR=forecasts$e_DI_h1-forecasts$e_DI_AR_h1
d=1/length(forecasts$y)*sum(DI_AR)
yk=1/length(forecasts$y)*sum((DI_AR-d)(DI_AR-d))
